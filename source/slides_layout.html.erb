<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">

    <title>Slides for
        <%= yield(:page_title) || 'Backend Development Textbook' %>
    </title>
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

		<meta name="viewport" content="width=device-width, initial-scale=1.0">

		<link rel="stylesheet" href="stylesheets/reset.css">
		<link rel="stylesheet" href="stylesheets/reveal.css">
		<link rel="stylesheet" href="stylesheets/theme/sky.css" id="theme">
    <link rel="stylesheet" type="text/css" href="stylesheets/code.css">

    <style>

    </style>

		<!-- Theme used for syntax highlighting of code -->
		<link rel="stylesheet" href="stylesheets/monokai.css">

</head>

<body>
    <div class="reveal">
      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">
        <%

        def scan_until(regex)
          match = @string.match(regex)
          return unless match
          @string = match.post_match
          match
        end

        def add_slides(html, intro)

          my_path = content_for(:output_path)
          link = my_path&.gsub('slides_', '')&.gsub('./output/', '')
          #puts "linking to #{link}"

          @string = html.dup

          pending = ""

          output = ""
          first = true
          i = 0

          until @string.empty?
            match =  scan_until /(<h[23456].*?>|<hr>+|(<p>)*ยง(<.p>)*)/m

            break if !match

            output << match.pre_match

            output << "</section>\n" unless first
            output << "<section>\n<p><a class='slide_break' href='#{link}#slide-#{i}'>โป</a></p>\n"
            i += 1
            if match[0] =~ /ยง/ then
              # discard match
            else
              output << match[0]
            end
            first = false
          end # untile @string.empty?

          output << @string
          output << "</section>"

          output
        end
      %>
        <%= add_slides(yield, yield(:header_section)).html_safe %>
      </div>
    </div>
    <!-- End slides. -->
    <!-- Required JS files. -->
		<script src="javascripts/reveal.js"></script>
		<script src="javascripts/search.js"></script>
		<script src="javascripts/markdown.js"></script>

    <script>
    // Also available as an ES module, see:
    // https://revealjs.com/initialization/
    Reveal.initialize({
      controls: true,
      progress: true,
      center: true,
      hash: true,

      keyboard: {
        27: () => { console.log('esc') }, // do something custom when ESC is pressed
        13: 'next', // go to the next slide when the ENTER key is pressed
      },

      // Learn about plugins: https://revealjs.com/plugins/
      plugins: [ RevealSearch, RevealMarkdown ]  // RevealHighlight
    });
    </script>
</body>

</html>
